generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Priority {
  Low
  Medium
  High
  Critical
}

enum Epic {
  Task
  Bug
  Epic
}

model User {
  id        String   @id @default(cuid()) @map("_id")
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  boards    Board[]
  tasks     Task[]   @relation("UserTasks")
}

model Board {
  id          String   @id @default(cuid()) @map("_id")
  boardName   String
  description String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  columns     Column[]
}

model Column {
  id        String   @id @default(cuid()) @map("_id")
  name      String
  boardId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  board     Board    @relation(fields: [boardId], references: [id])
  tasks     Task[]
}

model Task {
  id          String   @id @default(cuid()) @map("_id")
  name        String
  description String?
  priority    Priority?
  epic        Epic?
  position    Int
  assigneeId  String?
  assignee    User?    @relation("UserTasks", fields: [assigneeId], references: [id])
  columnId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  column      Column   @relation(fields: [columnId], references: [id])
}
